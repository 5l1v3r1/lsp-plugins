*******************************************************************************
* TODO LIST
*******************************************************************************

=== 1.1.0 ===

- Ported all widgets from GTK+ 2.x to raw X11 + cairo
- Fixed the behaviour of dynamic widgets for Tracktion DAW and other JUCE'd plugins.
- Implemented Frequenzselektiver Kompressor (Multiband Compressor) Mono, Stereo, LeftRight, MidSide
  plugin series
- Implemented Multiband Kompressor (Multiband Compressor) Mono, Stereo x4, x8 plugin series
- Added possibility to enter parameter values by hand by double-clicking on them.  
- Refactored and optimized filter transfer function calculation. 
- Implemented sampler with stereo outputs.
- Added possibility to place direct output to the pre-mixer/post-mixer position in the sampler.

=== 1.0.28 ===

- Fixed UI hangup when interacting with Bitwig Studio host.
- Additional display mode for spectrum analyzer added.
- Added graph amplitude scaling to equalizers.
- Added graph amplitude scaling to spectrum analyzer.

*******************************************************************************
* Release steps
*******************************************************************************
* Update version in Makefile
* Update CHANGELOG.txt and TODO.txt
* Run make clean && make uninstall && make -j8 install to build and install binaries
* Make video
* Add video cover to res/video-covers
* Upload release video to the site
* Add link to the video to src/doc/config/youtube.php
* Run ./release.sh to build binaries
* Commit all changes to SVN
* Tag version in SVN
* Upload binaries to sourceforge
* Copy contents of src/doc and res/doc/img/plugins to the site
* Publish video on youtube
* Publish news

*******************************************************************************
* PLUGIN LIST
*******************************************************************************

* Phasendetektor (Phase detector)
* Verzögerungsausgleicher (Phase Compensator)
* Spektrumanalysator (Spectrum Analyzer)
* Klangerzeuger (Sampler)
* Schlagzeug (Multi-Sampler)
* Triggersensor (Trigger)
* Parametrischer Entzerrer (Parametric Equalizer)
* Grafischer Entzerrer (Graphic Equalizer)
* Kompressor (Compressor)
* Expander (Expander)
* Gate (Gate)
* Begrenzer (Limiter)
* Impulsantworten (Impulse responses)
* Slap-back delay
- Hysteresis-based saturator
- Impulse Taker
- One-band compressor
- Multiband compressor
- Multiband expander
- Multiband gate
- Multiband limiter
- Saturator
- Doubler (Stereo enhancer)
- Verstärker Profiler (Amplifier profiler)
- Noise suppressor
- Transient Designer
- Nachhall (Reverberation)
- Tonhöhenänderer (Pitch shift)
- Leitungsvermittlung (Circuit Switcher)
- Korellationsmeter (Corellometer)
- Transient designer
- Decapitator
- HeadCrusher
- Dynamic Equalizer
- Ortswechsel (Dynamic panner)
- Verzerrung (Distortion)
- Sampler (real sampler)
- (JACK <-> ALSA Adaptor)


*******************************************************************************
* FEATURE REQUESTS: Detailed
*******************************************************************************

====
  cooltechno
    If it's possible, one feature request: to make a sound-preview in adding samples window in Klangerzeuger

====
  Anton Stankevich
    I often use a Calf Eq 5 after reberb effect. It will be nice to have some parametric equalization for reverb wet signal.
    This feature can help to give more presence for vocal with reverb for example.

====
  Braxton Salyer:
    Hey guys, LOVE YOUR WORK. Makes doing pro-audio in linux so much more viable.
    One thing we're definitely missing though is a good saturation plugin (a-la Decapitator,
    HeadCrusher, and similar). Is something like this in the works, our would it be in consideration?

====
  rghvdberg:
    The reduction meter on the compressors. I think they are a bit to fast to read out. It's also talked about in the lm forum.

====
  unfa:
    Are you looking for an idea to code a cool LV2 plugin?
    
    I guess we are all familiar with wavetable synthesis - a concept where an oscillator has a list (or a table)
    of looping waveforms and allows the user to alter the sound by picking different table indexes at any given moment.
    Mainstream exampls are NI Massive and Serum, an opensource one - Calf Wavetable.

	What can this concept have to do with convolution (impulse response) reverbs?

	What if we had a plugin that could load 128 short IR samples instead of one (like IR.lv2 or Klangfalter)
	and allowed the user to automate the table index for which sample is used at any given time? This could
	probably sound like morphing the physical environment of the room you're playing in. Maybe it'd be a boring
	thing, like there's nothing too amazing about automating a standrd C* Plate 2x2 reverb's tail length, or maybe...

	If we treated the IR table just like a wavetable synthesizer (think more Serum than Massive now), using
	very short (a few miliseconds) loops extracted from recorded or syntesized sounds like explosions, human
	speech, mechanical noises, randomly generated sequeces (creating short looped noise bursts - if you ever
	looped radom 30 samples of a sound in Audacity and loved the tone you know what I mean. Now imagine shifting
	the looped "selection" along a soundfile and using this as your virtual "stompbox emulation" for playing
	an instrument or a synth?

	Maybe instead of loading 128 soundfiles, load 1 and split it automatically at zero-crossings? That should be
	much easier to work with, who can manually cut up a soundfile to 128 chunks and remain sane after that?

	Adding an LFO and an envelope follower to the table index control, spiced up with manual automation - this
	could create some interesting moving sounds, from crazy growling bass synths to haunting ambient pads.

	Or maybe we could make a convolution processor that has a sidechain input - it uses that and slices it at zero
	crossings to create a short IR sample, and uses that to convolute the main input? A bit like a granular vocoder,
	w wicked stuff?

	Feeling inspired? Or am I crazy?

==== Limiter issue ====
  Tom Moody:
    On the limiter issue:
    1. I am using Ubuntu Studio 16.04, Ardour 5.6. No Calf plugins (one reason I tried out LSP is I kept having
       Ardour crashes and am trying to have a "life without Calf")
    2. The limiter doesn't crash Ardour. I have had the limiter GUI freeze but I can't duplicate this at the moment.
       Possibly this was an issue with Ardour 5.5 -- I'll let you know if it happens again.
    3. If the limiter GUI is open, when I open the export dialog, the limiter GUI stays on top of the export window.
       To view the export window, I have to move the limiter GUI to one side. When I export, the export window shows
       no moving progress bar, it just sits there until the file is exported, then the "analysis window" pops up on
       conclusion of the export. There is no movement in the limiter GUI window during the export, either, until the
       very conclusion of the export, then a little squiggle of audio appears in the graph, just at the fade.
    It's a minor issue. One thing I wanted to mention, on a positive note. I've been using the PSP Vintage Warmer plugin
    on Windows as a maximizer for a final, admittedly non-expert master. I am gradually moving everything to Linux, and your
    limiter in "boost" mode is an excellent replacement for the PSP. Much appreciated. 

==== Sample replacing ====
  Nekosounds:
    Is there any search/replace function implemented in case of lost impulse samples when moving your session to another computer?﻿
  LSP Project:
    Currently there is no search/replace method. Information about location of the file is stored as a pathname. If you have any suggestions
    about search/replace algorithm, we can discuss it.
  Nekosounds:﻿
    For me the best solution of this problem is in Ableton Live:
    - the program stores file path but also fingerprints
    - when loading a project and the samples are missing a warning is displayed
    - user can choose the location where to search for samples
    - program finds all candidate files with needed name and automatically replaces missing sample with the first file whose fingerprints matches pattern
    - if the program cannot find a file witch correct fingerprint, but filenames matches a dialog is displayed and user can choose the right file from the list
    - if no files found then a warning is displayed, user can manually replace the file with all settings preserved
  LSP Project:
    Displaying plugins error messages when loading project is possible at least for VSTs - eg. Sforzando behaves this way

==== Equalizer ====
  Norlick:
    Any way to make the EQ frequency display focus on a smaller range? Most of my EQing is
    within 5dB of change so on the current spectrum it looks like very miniscule changes.

==== Delays ====
  jonetsu:
    The benefit with using delays is that there are no tails to manage. Also, those delays can be colorized by
    EQ (dull is farther, bright is closer) and adjusted accordingly with compression. The compression has to work
    in the same way as the EQ, not against.

  sadko4u:
	Your explanations helped me to understand what another plugin we are currently missing in linux audio. I think that
	plugin that allows to simulate set of slap back delays combined with equalization will be very helpful while doing
	spacial processing. What do you think about it?

==== Analyzer ====
  Quirq:
    Back to the main topic, I'd dearly love to see a usable spectrum analyser that looked and behaved like Voxengo's SPAN:
    I use it for mix/mastering analysis; I was giving feedback to a friend for a CD release in December and looked again
    for comparable native analysers but went back to SPAN, even though it was a bit of a pain launching it separately and
    connecting everything up. (Now I've got Carla-rack that would be much, much less of an issue. But still it would be great
    to have something native.)
    I've looked at all the native analysers and none of them seem to come close. It's nice/clear to look at (important when
    you're using it for hours on end), the slope can be varied (useful for that gradual gentle slope down from low to high
    frequencies when things are balanced), but above all else, it's the fact that the display is smoothed and not at all spiky
    and is equally detailed across the spectrum (many analysers seem to be less detailed at the low end than they are for the
    highs). The image above looks like it's probably not on the more smoothed-out Mastering setting and is a bit spikier than
    the settings I use.

  ssj71:
    I think you are exactly right sadko, but Quirq is also right. Even though it's less accurate data,
    a mode like this can help the user to mentally process the data on screen better, even if it's less accurate.
    If you are using it for balance of frequencies, rather than trying to surgically remove or boost this or that
    freq, then I think a "frequency smoothed" mode is a good idea. Really it makes sense to have some independent
    control over smoothing WRT time AND/OR frequency. Especially with a few good presets ("Mastering," "high-accuracy," etc.)
    then it would be an even more useable and capable analyzer.

  Quirq:
    Thanks, you've very eloquently summarised what I was trying to say. The reason I got into using SPAN was because
    that's what the mastering engineer Ian Shepherd used in his Home Mastering EQ course (which I found incredibly useful).
    When I looked at all the native analysers to put things into practice, they all seem to be built more/just for precision,
    which is fine for most purposes but not as helpful for the broader-brush approach of mastering. 
  
    There are some analysers that are also scaled in a way that I don't find helpful – being marked 100, 200, 200, 400, 600, 800,
    1kHz, 2k etc with appropriate ticks in between is far more useful than 110, 220, 440, 880 etc. I understand why that's done,
    but it's harder to work out quickly where a feature of interest occurs in the spectrum unless it's centred around one of the
    marks. I think as well, having the area under the line makes things easier to read; most analysers do that, but not all.

==== Convolution Reverb ====

  As for the next one? I would like to see your take on a reverb. I've never really found one
  that I am satisfied with in linux. For convolution ardour cannot lot klangfalter lv2, the vst
  version loads but I'm not sure is completely stable. X42 plugins convolver is aimed at short
  impulses and has no controls, IR is unmaintained (I think) and, from experience, can have issues
  saving/loading parameters. For artificial reverb there are some good ones such as mverb but again
  I've never really felt very happy with them, none seem to offer the same kind of control that
  you can get with something like the Valhalla reverbs, epicVerb, or the new fabfilter reverb.
  
  An impulse purchase price of $30-$40 would be fine!
  
  The left input channel is convolved with the left and right impulse response file channels from IR1-A
  and the right input channel is convolved with the left and right impulse response file channel from IR1-B.
  The two output convolutions’ respective left and right components are then summed into a single stereo output.
  This configuration is necessary to take full advantage of true stereo impulse responses. True stereo impulse
  responses are required to be provided as two separate stereo files and loaded into IR1-A and IR1-B (or IR2-A and IR2-B).
  This configuration is typically found in high-end algorithmic reverbs. 

==== Multiband compressor ====
  I also thought that non-crossover multiband compressor is lacking linux audio. Crossovers do phase
  distortion at split points. Instead of this multiband compressor could be implemented as N-band
  equalizer with dynamically changing gain for each band where the gain is controlled as compression gain.
  
  That sounds excellent sadko4u, that's actually what I had in mind, I don't think there is anything like that for us.

==== Modulation Reverb ====
  A nice reverb plugin based on freeverb 3. It's old but does sound good IMHO.

==== Transient Designer ====
  Transient Designer I like to see. Calf has one but Calf works only sometimes in Ardour.

==== Tape simulator ====
  That's what I miss right now, as to what I really would like? A really good tape/dub delay with
  parameter changes which causes extreme zipper type effects, like Analogic Delay can produce.
  Tal Dub is amazing but it does not make the crazy sounds when you change the delay time which
  is a shame.

==== Saturator ====
  I'd say I think we're missing subtle saturation / distortion plugins. Stuff like
  VarietyOfSound used to put out -- FerricTDS, Tessla, the saturation stage in NastyVCS.

==== Filters ====
  A filter collection where you could use bezier or pixel-pencil to draw filter sweeps.
  
==== Noise Reduction ====
  I think noise reduction is the other big hole in LA currently.

==== Spring reverb ====
  Looking at scientific publications like this one, an accurate physical model of a spring reverb
  in real time seems out of reach for a longtime. 
  http://www.ness-music.eu/wp-content/uploads/2013/06/dafx13.pdf
  
  Do we have any resonator plugins? I used to use the on in ableton live years ago to create some
  quite nice spring reverb sounding fx when combined with the autofilter before the input. I can't
  think of any linux plugins that do anything similar.

==== Mastering ====
  On topic: I'd like to see, for example, a decent saturator, a multiband compressor, and
  a maximizer, possibly combined into one big mastering plugin.
  
==== Stereo image ====
  Oh, and one more. The thing we starve for really long is a good stereo image expander. Like the
  one you wrote for Calf project, but better.

==== Dynamic Equalizer ====
  Feature request for creating a Dynamic EQ plugin. If you're not familiar with them,
  it's basically an EQ, but it isn't applied until level passes the user defined threshold
  level. Or the inverse version where it is applied when the level drops below the threshold.
  
  Each parametric band would have it's own threshold / attack / release settings.
  Bonus points if a sidechain can be used for the dynamic triggering. Double bonus points if
  the dynamic triggering can optionally be set up to also (or possibly even exclusively) expand
  or contract the Q level. All the functionaly currently exist in the code base, it should mostly
  just be a matter of re-wiring the components.

  There is no LV2 implementation of this plugin to my knowlege. Outside of LV2, the free
  Nova Dynamic EQ vst plugin is an example of this implemented elsewhere.

==== Parameter entering ====
  In other subject, it would be great to be able to enter numerical values by double clicking
  on the DB value under the knobs.

==== Lookahead option ====
  Some dynamics plugins feature lookahead, some don't. As it is a very useful feature
  (eg. on a sidechain gate, having the gate start closing 1ms or so before the trigger makes it even more
  effective) and the code is there already, I feel it would be a welcome addition.

  Seconding this request, lookahead would be incredible and make the dynamics plugins very hard to beat.
  
==== Music stuff ====
  i plan on switching completely to linux for my mixing and mastering needs, i like the calf plugins,
  i appreciate the plugins it already contains, i just feel some cool things I'm looking for aren't there
  these are my feature request,
    - analog style emulated compresses, eqs, etc.
    - auto tune plugin
    - vocal rider type of plugin, that rides the track volume like the one pro tools has

==== Delay ====
  Re-implement Jesse Chappell's per-frequency delay from FreqTweak as a plugin. Bonus points:
  include frequency modulator functionality.

  This is kinda random, but there are not ladspa, lv2 plugins anything like the spectral delay
  functionality found in freqtweak. And it is starting to suffer from some significant bit-rot.
  Would be nice to be able to use it as a plugin.